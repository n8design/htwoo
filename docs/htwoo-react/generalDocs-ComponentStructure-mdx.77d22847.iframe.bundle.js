(self.webpackChunk_n8d_htwoo_react=self.webpackChunk_n8d_htwoo_react||[]).push([[9791],{"../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"../node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"../node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/generalDocs/ComponentStructure.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,image:()=>ComponentStructure_image});__webpack_require__("../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("../node_modules/@storybook/addon-docs/dist/blocks.mjs");const ComponentStructure_image={src:__webpack_require__.p+"static/media/component_structure.2781611e.png",alt:"MyTest Component"};function _createMdxContent(props){const _components={a:"a",code:"code",em:"em",h1:"h1",li:"li",ol:"ol",p:"p",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"Introduction/Component Structure"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"component-structure-overview",children:"Component Structure Overview"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["This documentation is meant to help you understnad how the components are designed so that you can more easily understnad how to extend them.\nThe image below shows a ",(0,jsx_runtime.jsx)(_components.code,{children:"schematic"}),' (if you will) for a general component called "MyTest".']}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Below the image is descriptions of the various aspects of the component."}),"\n","\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)("img",{src:ComponentStructure_image.src,alt:ComponentStructure_image.alt}),";"]}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"We have a common set of standard properties that all the HTWOO components extend. We are importing that interface here."}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["The property interface defined for the component should extend the common property interface which includes a property called ",(0,jsx_runtime.jsx)(_components.code,{children:"rootElementAttributes"})," as well as a string property ",(0,jsx_runtime.jsx)(_components.code,{children:"dataComponent"}),". A major theme to this library is that it should utilize standard HTML/CSS elements and attributes and that the developer should be able to easily extend those elements and attributes. To that end every component at least provides a property that can augment the attributes of the root HTML element of the component. By default it's generically typed, but each component should adjust the typing based on the actual root element for the component so we include it in the property defintion so we can be reminded to change the typing. All other component properties are added to the properties interface and as much as makes sense ",(0,jsx_runtime.jsx)(_components.code,{children:"enums"})," are defined for any properties that have a fixed set of appropriate values."]}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Most components don't require state, but in the case where it does a state inteface and factory interface have been defined."}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["By default all components in the library are PureComponents. PureComponents don't implement the ",(0,jsx_runtime.jsx)(_components.code,{children:"shouldComponentUpdate"})," method but instead handles a shallow compare for you. By doing so we reduce the amount of code to implement and improve performance. There are exceptions to when this type of component should be used (namly when properties or state would require a deep compare) and you can read more about it in the ",(0,jsx_runtime.jsx)(_components.a,{href:"https://reactjs.org/docs/react-api.html#reactpurecomponent",rel:"nofollow",children:"ReactJS documentation"}),". If you are contributing a component and believe that you should implement your own instance of ",(0,jsx_runtime.jsx)(_components.code,{children:"shouldComponentUpdate"})," please feel free to change to a normal component."]}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"We believe strongly in logging, each component defines a LOG_SOURCE string that is utilized in all try/catch blocks to help your debug your components and know where the error is coming from. By utilizing the fancy little ðŸ’¦ icon we also help filter the browser console log so it's easy to spot where the HTWOO component has logged a message."}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Sticking with our theme of configurability, we do however allow you to provide your own LOG_SOURCE value to make your messages cohesive by overriding the value using the ",(0,jsx_runtime.jsx)(_components.code,{children:"dataComponent"})," property."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Via the ",(0,jsx_runtime.jsx)(_components.code,{children:"rootElementAttributes"})," you can add additional classes to the component. If you do so your classes will be appended to the class list ",(0,jsx_runtime.jsx)(_components.em,{children:"AFTER"})," the HTWOO classes. This is key for overriding and adding additoinal accissibility properties to the element."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["We add a data-component attribute to the root element of every component. Like with the browser console log this let's you spot your components in the DOM when inspecting the page. Also we spread any of the attributues the user has added via the ",(0,jsx_runtime.jsx)(_components.code,{children:"rootElementAttributes"})," property, adding the combined classes after so that it will override the inejcted class."]}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"We've added try/catch blocks in all render functions to keep the code executing, and this is where console logging comes into play."}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);